diff -up kpipewire-6.4.4/src/h264vaapiencoder.cpp.omv~ kpipewire-6.4.4/src/h264vaapiencoder.cpp
--- kpipewire-6.4.4/src/h264vaapiencoder.cpp.omv~	2025-08-27 16:36:37.305227411 +0200
+++ kpipewire-6.4.4/src/h264vaapiencoder.cpp	2025-08-27 16:36:54.473194633 +0200
@@ -18,6 +18,12 @@ extern "C" {
 
 #include "logging_record.h"
 
+#ifndef AV_PROFILE_H264_BASELINE // ffmpeg before 8.0
+#define AV_PROFILE_H264_BASELINE FF_PROFILE_H264_BASELINE
+#define AV_PROFILE_H264_MAIN FF_PROFILE_H264_MAIN
+#define AV_PROFILE_H264_HIGH FF_PROFILE_H264_HIGH
+#endif
+
 H264VAAPIEncoder::H264VAAPIEncoder(H264Profile profile, PipeWireProduce *produce)
     : HardwareEncoder(produce)
     , m_profile(profile)
@@ -130,13 +136,13 @@ bool H264VAAPIEncoder::initialize(const
 
     switch (m_profile) {
     case H264Profile::Baseline:
-        m_avCodecContext->profile = FF_PROFILE_H264_CONSTRAINED_BASELINE;
+        m_avCodecContext->profile = AV_PROFILE_H264_CONSTRAINED_BASELINE;
         break;
     case H264Profile::Main:
-        m_avCodecContext->profile = FF_PROFILE_H264_MAIN;
+        m_avCodecContext->profile = AV_PROFILE_H264_MAIN;
         break;
     case H264Profile::High:
-        m_avCodecContext->profile = FF_PROFILE_H264_HIGH;
+        m_avCodecContext->profile = AV_PROFILE_H264_HIGH;
         break;
     }
 
diff -up kpipewire-6.4.4/src/libopenh264encoder.cpp.omv~ kpipewire-6.4.4/src/libopenh264encoder.cpp
--- kpipewire-6.4.4/src/libopenh264encoder.cpp.omv~	2025-08-27 16:37:06.346479646 +0200
+++ kpipewire-6.4.4/src/libopenh264encoder.cpp	2025-08-27 16:37:37.513726433 +0200
@@ -21,6 +21,12 @@ extern "C" {
 
 #include "logging_record.h"
 
+#ifndef AV_PROFILE_H264_BASELINE // ffmpeg before 8.0
+#define AV_PROFILE_H264_CONSTRAINED_BASELINE FF_PROFILE_H264_CONSTRAINED_BASELINE
+#define AV_PROFILE_H264_MAIN FF_PROFILE_H264_MAIN
+#define AV_PROFILE_H264_HIGH FF_PROFILE_H264_HIGH
+#endif
+
 LibOpenH264Encoder::LibOpenH264Encoder(H264Profile profile, PipeWireProduce *produce)
     : SoftwareEncoder(produce)
     , m_profile(profile)
@@ -64,13 +70,13 @@ bool LibOpenH264Encoder::initialize(cons
         // passes that through, but libopenh264 only allows BASELINE.
         // Until that bug is fixed there'll always be a warning that the
         // profile is not supported (https://github.com/cisco/openh264/issues/3613)
-        m_avCodecContext->profile = FF_PROFILE_H264_CONSTRAINED_BASELINE;
+        m_avCodecContext->profile = AV_PROFILE_H264_CONSTRAINED_BASELINE;
         break;
     case H264Profile::Main:
-        m_avCodecContext->profile = FF_PROFILE_H264_MAIN;
+        m_avCodecContext->profile = AV_PROFILE_H264_MAIN;
         break;
     case H264Profile::High:
-        m_avCodecContext->profile = FF_PROFILE_H264_HIGH;
+        m_avCodecContext->profile = AV_PROFILE_H264_HIGH;
         break;
     }
 
diff -up kpipewire-6.4.4/src/libx264encoder.cpp.omv~ kpipewire-6.4.4/src/libx264encoder.cpp
--- kpipewire-6.4.4/src/libx264encoder.cpp.omv~	2025-08-27 16:34:35.739592041 +0200
+++ kpipewire-6.4.4/src/libx264encoder.cpp	2025-08-27 16:36:06.579556203 +0200
@@ -20,6 +20,12 @@ extern "C" {
 
 #include "logging_record.h"
 
+#ifndef AV_PROFILE_H264_BASELINE // ffmpeg before 8.0
+#define AV_PROFILE_H264_BASELINE FF_PROFILE_H264_BASELINE
+#define AV_PROFILE_H264_MAIN FF_PROFILE_H264_MAIN
+#define AV_PROFILE_H264_HIGH FF_PROFILE_H264_HIGH
+#endif
+
 using namespace Qt::StringLiterals;
 
 LibX264Encoder::LibX264Encoder(H264Profile profile, PipeWireProduce *produce)
@@ -68,13 +74,13 @@ bool LibX264Encoder::initialize(const QS
 
     switch (m_profile) {
     case H264Profile::Baseline:
-        m_avCodecContext->profile = FF_PROFILE_H264_BASELINE;
+        m_avCodecContext->profile = AV_PROFILE_H264_BASELINE;
         break;
     case H264Profile::Main:
-        m_avCodecContext->profile = FF_PROFILE_H264_MAIN;
+        m_avCodecContext->profile = AV_PROFILE_H264_MAIN;
         break;
     case H264Profile::High:
-        m_avCodecContext->profile = FF_PROFILE_H264_HIGH;
+        m_avCodecContext->profile = AV_PROFILE_H264_HIGH;
         break;
     }
 
